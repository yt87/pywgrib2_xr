pywgrib2: GRIB2 library based on wgrib2
=======================================

.. _cartopy: https://scitools.org.uk/cartopy
.. _cfgrib: https://github.com/ecmwf/cfgrib
.. _iplib: https://www.nco.ncep.noaa.gov/pmb/docs/libs/iplib/ncep_iplib.shtml
.. _MetPy: https://unidata.github.io/MetPy/
.. _xarray: http://xarray.pydata.org
.. _wgrib2: https://www.cpc.ncep.noaa.gov/products/wesley/wgrib2

*pywgrib2* is a Python package to convert GRIB2 files to xarray_ datasets.  
Those datasets can be visualised by cartopy_ and MetPy_. It comes with its own,
based on National Centers for Environmental Prediction (NCEP) library iplib_.

The background engine is wgrib2_: the Swiss army knife of tools for GRIB2.
Recently *wgrib2* added Fortran and C library programming interfaces.
*pywgrib2* adds Python to the list. The design is influenced by cfgrib_,
another Python package to read GRIB files, while trying to address *cfgrib*
shortfalls handling GRIB2 files generated by NCEP.

*pywgrib2_xr* provides methods to read and write GRIB2 files.
The high-level interface mimics xarray's functions ``xarray.open_dataset`` and
``xarray.open_mfdataset``. It is **not** another GRIB backend such as
*cfgrib*, due to a different concept of ``datastore``.
*xarray* datastore is a file, the dataset obtained by reading that file
consists of a proper subset of messages in the file, subject to
selection criteria, if there is any. *pywgrib2_xr* considers a datastore as
a logical unit, represented by one or more files. The only contraints are:
the reference time, coded in
`Section 1 <https://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_doc/grib2_sect1.shtml>`__
of a GRIB message and Grid Definition Template, that is 
`Section 1 <https://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_doc/grib2_sect3.shtml>`__
have to be the same for all messages in the datastore.

The process of reading GRIB2 files is done in two stages. The first one is creation
of a ``template``. The template is built by scanning a full set of data files
(i.e. without missing data) for a single arbitrary reference time, subject to
selection criteria.
Template encapsulates dataset structure. The idea comes from *AWIPS1* NetCDF template
files used to instantiate storage of gridded data.

In the second stage, GRIB2 files are decoded, each message fills a slice in the dataset
built from the template. the function ``open_dataset`` simply concatenates datasets
along the first dimension ``reftime``. This greatly simplifies handling of missing
data files.

The low-level interface provides the same capabilities as *wgrib2*.

Documentation
-------------

The documentation is on GitHub pages https://yt87.github.io/pywgrib2_xr/

Licence
-------
**pywgrib2** is is released under
`BSD Zero Clause Licence <https://choosealicense.com/licenses/0bsd>__.
